{"swagger": "2.0", "info": {"title": "Pulp 3 API", "license": {"name": "GPLv2+"}, "logo": {"url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"}, "version": "v3"}, "host": "localhost:24817", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/pulp/api/v3/content/python/packages/": {"get": {"operationId": "content_python_packages_list", "summary": "List python package contents", "description": "<!-- User-facing documentation, rendered as html-->\nPythonPackageContent represents each individually installable Python package. In the Python\necosystem, this is called a <i>Python Distribution</i>, sometimes (ambiguously) refered to as a\npackage. In Pulp Python, we refer to it as <i>PythonPackageContent</i>. Each\nPythonPackageContent corresponds to a single filename, for example\n`pulpcore-3.0.0rc1-py3-none-any.whl` or `pulpcore-3.0.0rc1.tar.gz`.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "Filter results where name matches value", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "author", "in": "query", "description": "Filter results where author matches value", "required": false, "type": "string"}, {"name": "author__in", "in": "query", "description": "Filter results where author is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "packagetype", "in": "query", "description": "Filter results where packagetype matches value", "required": false, "type": "string"}, {"name": "packagetype__in", "in": "query", "description": "Filter results where packagetype is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "filename", "in": "query", "description": "Filter results where filename matches value", "required": false, "type": "string"}, {"name": "filename__in", "in": "query", "description": "Filter results where filename is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "filename__contains", "in": "query", "description": "Filter results where filename contains value", "required": false, "type": "string"}, {"name": "keywords__in", "in": "query", "description": "Filter results where keywords is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "keywords__contains", "in": "query", "description": "Filter results where keywords contains value", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/python.PythonPackageContent"}}}}}}, "tags": ["content: packages"]}, "post": {"operationId": "content_python_packages_create", "summary": "Create a python package content", "description": "Trigger an asynchronous task to create content,optionally create new repository version.", "parameters": [{"name": "artifact", "in": "formData", "description": "Artifact file representing the physical content", "required": false, "type": "string", "format": "uri"}, {"name": "relative_path", "in": "formData", "description": "Path where the artifact is located relative to distributions base_path", "required": true, "type": "string", "minLength": 1}, {"name": "file", "in": "formData", "description": "An uploaded file that may be turned into the artifact of the content unit.", "required": false, "type": "file"}, {"name": "repository", "in": "formData", "description": "A URI of a repository the new content unit should be associated with.", "required": false, "type": "string", "format": "uri"}, {"name": "filename", "in": "formData", "description": "The name of the distribution package, usually of the format: {distribution}-{version}(-{build tag})?-{python tag}-{abi tag}-{platform tag}.{packagetype}", "required": true, "type": "string", "minLength": 1}, {"name": "summary", "in": "formData", "description": "A one-line summary of what the package does.", "required": false, "type": "string"}, {"name": "description", "in": "formData", "description": "A longer description of the package that can run to several paragraphs.", "required": false, "type": "string"}, {"name": "keywords", "in": "formData", "description": "Additional keywords to be used to assist searching for the package in a larger catalog.", "required": false, "type": "string"}, {"name": "home_page", "in": "formData", "description": "The URL for the package's home page.", "required": false, "type": "string"}, {"name": "download_url", "in": "formData", "description": "Legacy field denoting the URL from which this package can be downloaded.", "required": false, "type": "string"}, {"name": "author", "in": "formData", "description": "Text containing the author's name. Contact information can also be added, separated with newlines.", "required": false, "type": "string"}, {"name": "author_email", "in": "formData", "description": "The author's e-mail address. ", "required": false, "type": "string"}, {"name": "maintainer", "in": "formData", "description": "The maintainer's name at a minimum; additional contact information may be provided.", "required": false, "type": "string"}, {"name": "maintainer_email", "in": "formData", "description": "The maintainer's e-mail address.", "required": false, "type": "string"}, {"name": "license", "in": "formData", "description": "Text indicating the license covering the distribution", "required": false, "type": "string"}, {"name": "requires_python", "in": "formData", "description": "The Python version(s) that the distribution is guaranteed to be compatible with.", "required": false, "type": "string"}, {"name": "project_url", "in": "formData", "description": "A browsable URL for the project and a label for it, separated by a comma.", "required": false, "type": "string"}, {"name": "platform", "in": "formData", "description": "A comma-separated list of platform specifications, summarizing the operating systems supported by the package.", "required": false, "type": "string"}, {"name": "supported_platform", "in": "formData", "description": "Field to specify the OS and CPU for which the binary package was compiled. ", "required": false, "type": "string"}, {"name": "requires_dist", "in": "formData", "description": "A JSON list containing names of some other distutils project required by this distribution.", "required": false, "type": "string", "default": []}, {"name": "provides_dist", "in": "formData", "description": "A JSON list containing names of a Distutils project which is contained within this distribution.", "required": false, "type": "string", "default": []}, {"name": "obsoletes_dist", "in": "formData", "description": "A JSON list containing names of a distutils project's distribution which this distribution renders obsolete, meaning that the two projects should not be installed at the same time.", "required": false, "type": "string", "default": []}, {"name": "requires_external", "in": "formData", "description": "A JSON list containing some dependency in the system that the distribution is to be used.", "required": false, "type": "string", "default": []}, {"name": "classifiers", "in": "formData", "description": "A JSON list containing classification values for a Python package.", "required": false, "type": "string", "default": []}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["content: packages"]}, "parameters": []}, "{python_package_content_href}": {"get": {"operationId": "content_python_packages_read", "summary": "Inspect a python package content", "description": "<!-- User-facing documentation, rendered as html-->\nPythonPackageContent represents each individually installable Python package. In the Python\necosystem, this is called a <i>Python Distribution</i>, sometimes (ambiguously) refered to as a\npackage. In Pulp Python, we refer to it as <i>PythonPackageContent</i>. Each\nPythonPackageContent corresponds to a single filename, for example\n`pulpcore-3.0.0rc1-py3-none-any.whl` or `pulpcore-3.0.0rc1.tar.gz`.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/python.PythonPackageContent"}}}, "tags": ["content: packages"]}, "parameters": [{"name": "python_package_content_href", "in": "path", "description": "URI of Python Package Content. e.g.: /pulp/api/v3/content/python/packages/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/python/pypi/": {"get": {"operationId": "distributions_python_pypi_list", "summary": "List python distributions", "description": "<!-- User-facing documentation, rendered as html-->\nPulp Python Distributions are used to distribute\n<a href=\"../restapi.html#tag/publications\">Python Publications.</a> <b> Pulp Python\nDistributions should not be confused with \"Python Distribution\" as defined by the Python\ncommunity.</b> In Pulp usage, Python content is refered to as <a\nhref=\"../restapi.html#tag/content\">Python Package Content.</a>", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "base_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__icontains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__in", "in": "query", "description": "Filter results where base_path is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/python.PythonDistribution"}}}}}}, "tags": ["distributions: pypi"]}, "post": {"operationId": "distributions_python_pypi_create", "summary": "Create a python distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/python.PythonDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: pypi"]}, "parameters": []}, "{python_distribution_href}": {"get": {"operationId": "distributions_python_pypi_read", "summary": "Inspect a python distribution", "description": "<!-- User-facing documentation, rendered as html-->\nPulp Python Distributions are used to distribute\n<a href=\"../restapi.html#tag/publications\">Python Publications.</a> <b> Pulp Python\nDistributions should not be confused with \"Python Distribution\" as defined by the Python\ncommunity.</b> In Pulp usage, Python content is refered to as <a\nhref=\"../restapi.html#tag/content\">Python Package Content.</a>", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/python.PythonDistribution"}}}, "tags": ["distributions: pypi"]}, "put": {"operationId": "distributions_python_pypi_update", "summary": "Update a python distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/python.PythonDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: pypi"]}, "patch": {"operationId": "distributions_python_pypi_partial_update", "summary": "Partially update a python distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/python.PythonDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: pypi"]}, "delete": {"operationId": "distributions_python_pypi_delete", "summary": "Delete a python distribution", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: pypi"]}, "parameters": [{"name": "python_distribution_href", "in": "path", "description": "URI of Python Distribution. e.g.: /pulp/api/v3/distributions/python/pypi/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/publications/python/pypi/": {"get": {"operationId": "publications_python_pypi_list", "summary": "List python publications", "description": "<!-- User-facing documentation, rendered as html-->\nPython Publications refer to the Python Package content in a repository version, and include\nmetadata about that content.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "pulp_created__lt", "in": "query", "description": "Filter results where pulp_created is less than value", "required": false, "type": "string"}, {"name": "pulp_created__lte", "in": "query", "description": "Filter results where pulp_created is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__gt", "in": "query", "description": "Filter results where pulp_created is greater than value", "required": false, "type": "string"}, {"name": "pulp_created__gte", "in": "query", "description": "Filter results where pulp_created is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__range", "in": "query", "description": "Filter results where pulp_created is between two comma separated values", "required": false, "type": "string"}, {"name": "pulp_created", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/python.PythonPublication"}}}}}}, "tags": ["publications: pypi"]}, "post": {"operationId": "publications_python_pypi_create", "summary": "Create a python publication", "description": "Trigger an asynchronous task to publish python content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/python.PythonPublication"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["publications: pypi"]}, "parameters": []}, "{python_publication_href}": {"get": {"operationId": "publications_python_pypi_read", "summary": "Inspect a python publication", "description": "<!-- User-facing documentation, rendered as html-->\nPython Publications refer to the Python Package content in a repository version, and include\nmetadata about that content.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/python.PythonPublication"}}}, "tags": ["publications: pypi"]}, "delete": {"operationId": "publications_python_pypi_delete", "summary": "Delete a python publication", "description": "<!-- User-facing documentation, rendered as html-->\nPython Publications refer to the Python Package content in a repository version, and include\nmetadata about that content.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["publications: pypi"]}, "parameters": [{"name": "python_publication_href", "in": "path", "description": "URI of Python Publication. e.g.: /pulp/api/v3/publications/python/pypi/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/python/python/": {"get": {"operationId": "remotes_python_python_list", "summary": "List python remotes", "description": "<!-- User-facing documentation, rendered as html-->\nPython Remotes are representations of an <b>external repository</b> of Python content, eg.\nPyPI.  Fields include upstream repository config. Python Remotes are also used to `sync` from\nupstream repositories, and contains sync settings.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "pulp_last_updated__lt", "in": "query", "description": "Filter results where pulp_last_updated is less than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__lte", "in": "query", "description": "Filter results where pulp_last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query", "description": "Filter results where pulp_last_updated is greater than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gte", "in": "query", "description": "Filter results where pulp_last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range", "in": "query", "description": "Filter results where pulp_last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/python.PythonRemote"}}}}}}, "tags": ["remotes: python"]}, "post": {"operationId": "remotes_python_python_create", "summary": "Create a python remote", "description": "<!-- User-facing documentation, rendered as html-->\nPython Remotes are representations of an <b>external repository</b> of Python content, eg.\nPyPI.  Fields include upstream repository config. Python Remotes are also used to `sync` from\nupstream repositories, and contains sync settings.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/python.PythonRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/python.PythonRemote"}}}, "tags": ["remotes: python"]}, "parameters": []}, "{python_remote_href}": {"get": {"operationId": "remotes_python_python_read", "summary": "Inspect a python remote", "description": "<!-- User-facing documentation, rendered as html-->\nPython Remotes are representations of an <b>external repository</b> of Python content, eg.\nPyPI.  Fields include upstream repository config. Python Remotes are also used to `sync` from\nupstream repositories, and contains sync settings.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/python.PythonRemote"}}}, "tags": ["remotes: python"]}, "put": {"operationId": "remotes_python_python_update", "summary": "Update a python remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/python.PythonRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: python"]}, "patch": {"operationId": "remotes_python_python_partial_update", "summary": "Partially update a python remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/python.PythonRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: python"]}, "delete": {"operationId": "remotes_python_python_delete", "summary": "Delete a python remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: python"]}, "parameters": [{"name": "python_remote_href", "in": "path", "description": "URI of Python Remote. e.g.: /pulp/api/v3/remotes/python/python/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/repositories/python/python/": {"get": {"operationId": "repositories_python_python_list", "summary": "List python repositorys", "description": "A ViewSet for PythonRepository.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/python.PythonRepository"}}}}}}, "tags": ["repositories: python"]}, "post": {"operationId": "repositories_python_python_create", "summary": "Create a python repository", "description": "A ViewSet for PythonRepository.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/python.PythonRepository"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/python.PythonRepository"}}}, "tags": ["repositories: python"]}, "parameters": []}, "{python_repository_href}": {"get": {"operationId": "repositories_python_python_read", "summary": "Inspect a python repository", "description": "A ViewSet for PythonRepository.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/python.PythonRepository"}}}, "tags": ["repositories: python"]}, "put": {"operationId": "repositories_python_python_update", "summary": "Update a python repository", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/python.PythonRepository"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: python"]}, "patch": {"operationId": "repositories_python_python_partial_update", "summary": "Partially update a python repository", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/python.PythonRepository"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: python"]}, "delete": {"operationId": "repositories_python_python_delete", "summary": "Delete a python repository", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: python"]}, "parameters": [{"name": "python_repository_href", "in": "path", "description": "URI of Python Repository. e.g.: /pulp/api/v3/repositories/python/python/1/", "required": true, "type": "string"}]}, "{python_repository_href}modify/": {"post": {"operationId": "repositories_python_python_modify", "summary": "Modify Repository Content", "description": "Trigger an asynchronous task to create a new repository version.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryAddRemoveContent"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: python"]}, "parameters": [{"name": "python_repository_href", "in": "path", "description": "URI of Python Repository. e.g.: /pulp/api/v3/repositories/python/python/1/", "required": true, "type": "string"}]}, "{python_repository_href}sync/": {"post": {"operationId": "repositories_python_python_sync", "summary": "Sync from remote", "description": "Trigger an asynchronous task to sync Python content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: python"]}, "parameters": [{"name": "python_repository_href", "in": "path", "description": "URI of Python Repository. e.g.: /pulp/api/v3/repositories/python/python/1/", "required": true, "type": "string"}]}, "{python_repository_href}versions/": {"get": {"operationId": "repositories_python_python_versions_list", "summary": "List repository versions", "description": "PythonRepositoryVersion represents a single Python repository version.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "number", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "number__lt", "in": "query", "description": "Filter results where number is less than value", "required": false, "type": "number"}, {"name": "number__lte", "in": "query", "description": "Filter results where number is less than or equal to value", "required": false, "type": "number"}, {"name": "number__gt", "in": "query", "description": "Filter results where number is greater than value", "required": false, "type": "number"}, {"name": "number__gte", "in": "query", "description": "Filter results where number is greater than or equal to value", "required": false, "type": "number"}, {"name": "number__range", "in": "query", "description": "Filter results where number is between two comma separated values", "required": false, "type": "number"}, {"name": "pulp_created__lt", "in": "query", "description": "Filter results where pulp_created is less than value", "required": false, "type": "string"}, {"name": "pulp_created__lte", "in": "query", "description": "Filter results where pulp_created is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__gt", "in": "query", "description": "Filter results where pulp_created is greater than value", "required": false, "type": "string"}, {"name": "pulp_created__gte", "in": "query", "description": "Filter results where pulp_created is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__range", "in": "query", "description": "Filter results where pulp_created is between two comma separated values", "required": false, "type": "string"}, {"name": "content", "in": "query", "description": "Content Unit referenced by HREF", "required": false, "type": "string"}, {"name": "pulp_created", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/RepositoryVersion"}}}}}}, "tags": ["repositories: python versions"]}, "parameters": [{"name": "python_repository_href", "in": "path", "description": "URI of Python Repository. e.g.: /pulp/api/v3/repositories/python/python/1/", "required": true, "type": "string"}]}, "{python_repository_version_href}": {"get": {"operationId": "repositories_python_python_versions_read", "summary": "Inspect a repository version", "description": "PythonRepositoryVersion represents a single Python repository version.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RepositoryVersion"}}}, "tags": ["repositories: python versions"]}, "delete": {"operationId": "repositories_python_python_versions_delete", "summary": "Delete a repository version", "description": "Trigger an asynchronous task to delete a repositroy version.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: python versions"]}, "parameters": [{"name": "python_repository_version_href", "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/python/python/1/versions/1/", "required": true, "type": "string"}]}, "{python_repository_version_href}repair/": {"post": {"operationId": "repositories_python_python_versions_repair", "description": "Trigger an asynchronous task to repair a repositroy version.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositoryVersion"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: python versions"]}, "parameters": [{"name": "python_repository_version_href", "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/python/python/1/versions/1/", "required": true, "type": "string"}]}}, "definitions": {"python.PythonPackageContent": {"required": ["filename"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "filename": {"title": "Filename", "description": "The name of the distribution package, usually of the format: {distribution}-{version}(-{build tag})?-{python tag}-{abi tag}-{platform tag}.{packagetype}", "type": "string", "minLength": 1}, "packagetype": {"title": "Packagetype", "description": "The type of the distribution package (e.g. sdist, bdist_wheel, bdist_egg, etc)", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description": "The name of the python project.", "type": "string", "readOnly": true, "minLength": 1}, "version": {"title": "Version", "description": "The packages version number.", "type": "string", "readOnly": true, "minLength": 1}, "metadata_version": {"title": "Metadata version", "description": "Version of the file format", "type": "string", "readOnly": true, "minLength": 1}, "summary": {"title": "Summary", "description": "A one-line summary of what the package does.", "type": "string"}, "description": {"title": "Description", "description": "A longer description of the package that can run to several paragraphs.", "type": "string"}, "keywords": {"title": "Keywords", "description": "Additional keywords to be used to assist searching for the package in a larger catalog.", "type": "string"}, "home_page": {"title": "Home page", "description": "The URL for the package's home page.", "type": "string"}, "download_url": {"title": "Download url", "description": "Legacy field denoting the URL from which this package can be downloaded.", "type": "string"}, "author": {"title": "Author", "description": "Text containing the author's name. Contact information can also be added, separated with newlines.", "type": "string"}, "author_email": {"title": "Author email", "description": "The author's e-mail address. ", "type": "string"}, "maintainer": {"title": "Maintainer", "description": "The maintainer's name at a minimum; additional contact information may be provided.", "type": "string"}, "maintainer_email": {"title": "Maintainer email", "description": "The maintainer's e-mail address.", "type": "string"}, "license": {"title": "License", "description": "Text indicating the license covering the distribution", "type": "string"}, "requires_python": {"title": "Requires python", "description": "The Python version(s) that the distribution is guaranteed to be compatible with.", "type": "string"}, "project_url": {"title": "Project url", "description": "A browsable URL for the project and a label for it, separated by a comma.", "type": "string"}, "platform": {"title": "Platform", "description": "A comma-separated list of platform specifications, summarizing the operating systems supported by the package.", "type": "string"}, "supported_platform": {"title": "Supported platform", "description": "Field to specify the OS and CPU for which the binary package was compiled. ", "type": "string"}, "requires_dist": {"title": "Requires dist", "description": "A JSON list containing names of some other distutils project required by this distribution.", "type": "object", "default": []}, "provides_dist": {"title": "Provides dist", "description": "A JSON list containing names of a Distutils project which is contained within this distribution.", "type": "object", "default": []}, "obsoletes_dist": {"title": "Obsoletes dist", "description": "A JSON list containing names of a distutils project's distribution which this distribution renders obsolete, meaning that the two projects should not be installed at the same time.", "type": "object", "default": []}, "requires_external": {"title": "Requires external", "description": "A JSON list containing some dependency in the system that the distribution is to be used.", "type": "object", "default": []}, "classifiers": {"title": "Classifiers", "description": "A JSON list containing classification values for a Python package.", "type": "object", "default": []}}}, "AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "python.PythonDistribution": {"required": ["base_path", "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path", "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "base_url": {"title": "Base url", "description": "The URL for accessing the publication as defined by this distribution.", "type": "string", "readOnly": true, "minLength": 1}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name": {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string", "minLength": 1}, "publication": {"title": "Publication", "description": "Publication to be served", "type": "string", "format": "uri", "x-nullable": true}}}, "python.PythonPublication": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "repository_version": {"title": "Repository version", "type": "string", "format": "uri"}, "repository": {"title": "Repository", "description": "A URI of the repository to be published.", "type": "string", "format": "uri"}, "distributions": {"description": "This publication is currently being hosted as configured by these distributions.", "type": "array", "items": {"description": "This publication is currently being hosted as configured by these distributions.", "type": "string", "format": "uri"}, "readOnly": true, "uniqueItems": true}}}, "ProjectSpecifier": {"description": "AKA \"Whitelist\". A list of dictionaries, expand for more information.\n        Example:\n\n        [{\"name\": \"django\", \"version_specifier\":\"~=2.0\"}]\n", "required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "description": "A python project name.", "type": "string", "minLength": 1}, "version_specifier": {"title": "Version specifier", "description": "A version specifier accepts standard python versions syntax: `>=`, `<=`, `==`, `~=`, `>`, `<`, `!` and can be used in conjunction with other specifiers i.e. `>1`,`<=3`,`!=3.0.2`. Note that the specifiers treat pre-released versions as `<` released versions, so 3.0.0a1 < 3.0.0. Not setting the version_specifier will sync all the pre-released and released versions.", "type": "string"}}}, "python.PythonRemote": {"required": ["name", "url"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "ca_cert": {"title": "Ca cert", "description": "A string containing the PEM encoded CA certificate used to validate the server certificate presented by the remote server. All new line characters must be escaped.", "type": "string", "minLength": 1, "x-nullable": true}, "client_cert": {"title": "Client cert", "description": "A string containing the PEM encoded client certificate used for authentication. All new line characters must be escaped.", "type": "string", "minLength": 1, "x-nullable": true}, "client_key": {"title": "Client key", "description": "A PEM encoded private key used for authentication.", "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation": {"title": "Tls validation", "description": "If True, TLS peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title": "Username", "description": "The username to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password": {"title": "Password", "description": "The password to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'cache_only'. 'immediate' is the default.", "type": "string", "enum": ["immediate", "on_demand", "streamed"], "default": "immediate"}, "includes": {"description": "AKA \"Whitelist\". A list of dictionaries, expand for more information.\n        Example:\n\n        [{\"name\": \"django\", \"version_specifier\":\"~=2.0\"}]\n", "type": "array", "items": {"$ref": "#/definitions/ProjectSpecifier"}}, "excludes": {"description": "\"AKA \"Blacklist\". A list of dictionaries, expand for more information.\n        Example:\n\n        [{\"name\": \"django\", \"version_specifier\":\"~=2.0\"}]\n", "type": "array", "items": {"$ref": "#/definitions/ProjectSpecifier"}}, "prereleases": {"title": "Prereleases", "description": "Whether or not to include pre-release packages in the sync.", "type": "boolean"}}}, "python.PythonRepository": {"required": ["name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "versions_href": {"title": "Versions href", "type": "string", "format": "uri", "readOnly": true}, "latest_version_href": {"title": "Latest version href", "type": "string", "format": "uri", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this repository.", "type": "string", "minLength": 1}, "description": {"title": "Description", "description": "An optional description.", "type": "string", "minLength": 1, "x-nullable": true}}}, "RepositoryAddRemoveContent": {"type": "object", "properties": {"add_content_units": {"description": "A list of content units to add to a new repository version. This content is added after remove_content_units are removed.", "type": "array", "items": {"type": "string"}}, "remove_content_units": {"description": "A list of content units to remove from the latest repository version. You may also specify '*' as an entry to remove all content. This content is removed before add_content_units are added.", "type": "array", "items": {"type": "string"}}, "base_version": {"title": "Base version", "description": "A repository version whose content will be used as the initial set of content for the new repository version", "type": "string", "format": "uri"}}}, "RepositorySyncURL": {"required": ["remote"], "type": "object", "properties": {"remote": {"title": "Remote", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only.", "type": "boolean", "default": false}}}, "ContentSummary": {"title": "Content summary", "description": "Various count summaries of the content in the version and the HREF to view them.", "required": ["added", "removed", "present"], "type": "object", "properties": {"added": {"title": "Added", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}, "removed": {"title": "Removed", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}, "present": {"title": "Present", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}}}, "RepositoryVersion": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "number": {"title": "Number", "type": "integer", "readOnly": true}, "base_version": {"title": "Base version", "description": "A repository version whose content was used as the initial set of content for this repository version", "type": "string", "format": "uri"}, "content_summary": {"$ref": "#/definitions/ContentSummary"}}}}, "tags": [{"name": "content: packages", "x-displayName": "Content: Packages"}, {"name": "distributions: pypi", "x-displayName": "Distributions: Pypi"}, {"name": "publications: pypi", "x-displayName": "Publications: Pypi"}, {"name": "remotes: python", "x-displayName": "Remotes: Python"}, {"name": "repositories: python", "x-displayName": "Repositories: Python"}, {"name": "repositories: python versions", "x-displayName": "Repositories: Python Versions"}]}